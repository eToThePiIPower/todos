ruby:
  todo_list_item_classes = ['list-group-item todo-list-item']
  todo_list_item_classes << (item.complete? ? 'todo-list-item-complete' : 'todo-list-item-incomplete')
  todo_list_item_classes << 'todo-list-item-old' if item.archived?
  todo_list_item_classes << 'todo-list-item-overdue' if item.overdue?
  todo_list_item_classes << 'todo-list-item-due-now' if item.due_now?

li[class=todo_list_item_classes id=item.id data-sortorder=item.sort_order]
  .list-group-item-heading
    h4.no-widows = item.name
    = link_to 'edit', "\#modal-for-item-#{item.id}",
              data: { toggle: 'modal', keyboard: true },
              class: 'todo-item-edit-button'
    = render 'todo_items/modal_form', item: item
  .list-group-item-text.todo-item-description
    = markdown(item.description)
  - if item.complete?
    p.list-group-item-text
      = item.tag_for_time(:completed)
  - else
    p.list-group-item-text
      = item.tag_for_time(:due)
    p.list-group-item-text
      = item.tag_for_time(:created)
  .completion-toggle-box
    - if item.complete?
      = link_to todo_list_uncomplete_path(@todo_list, item),
          remote: true,
          id: "todo-item-toggle-#{item.id}",
          method: :delete,
          class: 'btn btn-xs btn-link' do
        i.fa.fa-lg.fa-check-square-o[aria-hidden='true']
        span.sr-only Uncomplete this item
    - else
      = link_to todo_list_complete_path(@todo_list, item),
          remote: true,
          id: "todo-item-toggle-#{item.id}",
          method: :put,
          class: 'btn btn-xs btn-link' do
        i.fa.fa-lg.fa-square-o[aria-hidden='true']
        span.sr-only Complete this item

  .list-group-item-text.actions
    = link_to todo_list_todo_item_path(@todo_list, item),
        remote: true,
        method: :delete,
        data: { confirm: 'Are you sure you want to delete this item? This action cannot be undone.' },
        class: 'btn btn-xs btn-link' do
      i.fa.fa-remove[aria-hidden='true']
      span.sr-only Delete this item
